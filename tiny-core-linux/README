Notes
- Do a clean install of piCore
- Boot on Pi
- Run `sudo fdisk -u /dev/mmcblk0`
- List partitions by pressing p
- Delete partition by pressing d, select partition number 2
- Create new partition by pressing n, select primary by pressing P, parition number 2
- Select start location the saem as the original list
- Let end location remain default
- Press w to write
- Reboot
- Resize disk by `sudo resize2fs /dev/mmcblkp2`

- Copy wireless and other core packages to SD Card
- `mount /dev/mmcblk0p1`
- `cp /mnt/mmcblk0p1/<folder>/packages/*.tcz /mnt/mmcblk0p2/tce/optional/`
- `tce-load -i /dev/mmcblk0p2/tce/optional/*.tcz`
- `cd /dev/mmcblk0p2/tce/optional/`
- `for file in *.tcz; do md5sum $file $file.md5.txt; done;`
- Connect to the wifi `sudo wifi.sh`
- `tce-audit updatedeps`
- `for file in /mnt/mmcblk0p2/tce/optional/*.tcz; do if [ $file != 'FBTerm.tcz' ]; then tce-update $file; fi; done`
- `mkdir ~/.ssh; cp /mnt/mmcblk0p1/<folder>/ssh/* ~/.ssh/; chmod 600 ~/.ssh/config; chmod 400 ~/.ssh/*.pem`
- `cp /mnt/mmcblk0p1/<folder>/scripts/setup.sh ~/.setup.sh`
- `cp /mnt/mmcblk0p1/<folder>/scripts/term-set.sh ~/.term-set.sh`
- `echo "alias vim=vi" >> ~/.ashrc`  
- `echo "if [ ! -f /home/\`whoami`/.ash-init-successful ]; then sudo wifi.sh; fi" >> ~/.ashrc`  
- `echo ". ./.term-set.sh" >> ~/.ashrc`  
- `echo "touch .ash-init-successful >> " >> ~/.ashrc`  
- `echo y | backup`
- Package fbterm into the root filesystem.
- `mkdir /tmp/extract`
- `cp /mnt/mmcblk0p1/rootfs-piCore-X.gz /tmp/extract/`
- `cd /tmp/extract`
- `zcat | sudo cpio -i -H newc -d`
- Copy fonts into /tmp/extract/usr/share/fonts/truetype, copy fbterm config into /tmp/extract/root/.fbtermrc, edit /tmp/extract/etc/init
- Zip it again by running `find | sudo cpio -o -H newc | gzip -2 > /tmp/rootfs-fbterm.gz` and `cp /tmp/rootfs-fbterm.gz /mnt/mmcblk0p1/rootfs-piCore-X.gz`
- `sudo reboot`

This will configure the system for use with FBTerm.

The following steps can be done to convert any Debian package to a TinyCore package.
As a pre-step, FBTerm might also need to be converted to a TCZ format.
This is done by fetching the archietcture-specific .deb package, extracting it, adding a TC Info file, and then repackaging as a tcz.

- `sudo yum install dpkg squashfs-tools`
- `wget http://ftp.debian.org/debian/pool/main/f/fbterm/fbterm_1.7-4+b1_arm64.deb`
- `mkdir fbterm-deb`
- `dpkg -x fbterm_1.7-4+b1_arm64.deb fbterm-deb`
- `mkdir -p fbterm-tcz/usr/local/bin/`
- `cp fbterm-deb/usr/bin/* fbterm-tcz/usr/local/bin/`
- `echo 'NAME="FBTerm"
VERSION=1.7.4
DESCRIPTION="FBTerm v1.7.4 (arm64)"' > fbterm-tcz/fbterm.tcz.info`
- `mksquashfs fbterm-tcz FBTerm.tcz -noappend`

Further, once this is backed up, the disk image can be created and restored with dd
- Eject the mounted drive and find out the device
- `dd if=/dev/disk2 of=~/Desktop/image.img bs=1m conv=sync,noerror status=progress`
- `gzip ~/Desktop/image.img`
For restoring, reverse these steps
- `gunzip ~/Desktop/image.img.gz`
- `dd if=~/Desktop/image.img of=/dev/disk2 bs=1m conv=sync,noerror status=progress`
